<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.card.zh.mapper.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.card.zh.entity.UserInfo">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="account_status" property="accountStatus" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="head_sculpture" property="headSculpture" jdbcType="VARCHAR"/>
        <result column="qq_number" property="qqNumber" jdbcType="VARCHAR"/>
        <result column="wechat_number" property="wechatNumber" jdbcType="VARCHAR"/>
        <result column="qq_qr_code" property="qqQrCode" jdbcType="LONGVARBINARY"/>
        <result column="wechat_qr_code" property="wechatQrCode" jdbcType="LONGVARBINARY"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_name, nick_name, sex, phone, account, password, account_status, email, head_sculpture,
    qq_number, wechat_number
  </sql>
    <sql id="Blob_Column_List">
    qq_qr_code, wechat_qr_code
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from user_info
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="getUsers" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from user_info
    </select>

    <select id="getUsersExcluseBlob" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_info
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>

    <insert id="insert" parameterType="com.card.zh.entity.UserInfo">
    insert into user_info (id, user_name, nick_name,
      sex, phone, account,
      password, account_status, email,
      head_sculpture, qq_number, wechat_number,
      qq_qr_code, wechat_qr_code)
    values (#{id,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
      #{sex,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{accountStatus,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
      #{headSculpture,jdbcType=VARCHAR}, #{qqNumber,jdbcType=VARCHAR}, #{wechatNumber,jdbcType=VARCHAR},
      #{qqQrCode,jdbcType=LONGVARBINARY}, #{wechatQrCode,jdbcType=LONGVARBINARY})
  </insert>


    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.card.zh.entity.UserInfo">
    update user_info
    set user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      account_status = #{accountStatus,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      head_sculpture = #{headSculpture,jdbcType=VARCHAR},
      qq_number = #{qqNumber,jdbcType=VARCHAR},
      wechat_number = #{wechatNumber,jdbcType=VARCHAR},
      qq_qr_code = #{qqQrCode,jdbcType=LONGVARBINARY},
      wechat_qr_code = #{wechatQrCode,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <update id="updateByPrimaryKey" parameterType="com.card.zh.entity.UserInfo">
    update user_info
    set user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      account_status = #{accountStatus,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      head_sculpture = #{headSculpture,jdbcType=VARCHAR},
      qq_number = #{qqNumber,jdbcType=VARCHAR},
      wechat_number = #{wechatNumber,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>